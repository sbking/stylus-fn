/**
 * Returns the maximum value in list. If an iterator function is provided, it
 * will be used on each value to generate the criterion by which the value is
 * ranked.
 */

@import "../utility/identity"
@import "reduce"

fn-max(list, iterator = null)
  iterator = iterator or fn-identity

  greater(value, other, key, list)
    return iterator(value, key, list) > iterator(other, key, list) ? value : other

  if fn-is-hash(list)
    return fn-reduce(list, greater, list[keys(list)[0]])
  else
    return fn-reduce(list, greater, list[0])